name: Build and Deploy NestJS to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set short SHA
        id: vars
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nestjs-api:${{ env.SHORT_SHA }} .

      - name: Push image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nestjs-api:${{ env.SHORT_SHA }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Set short SHA
        id: vars
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Docker container on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} <<EOF
            echo "🧹 Cleaning unused Docker data..."
            docker system prune -f

            echo "⬇️ Pulling image with tag: ${SHORT_SHA}"
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nestjs-api:${{ env.SHORT_SHA }}

            echo "🛑 Stopping old container if exists..."
            docker stop nestjs-api || true
            docker rm nestjs-api || true

            echo "🚀 Running new container..."
            docker run -d --restart unless-stopped \
              --name nestjs-api \
              -p 3000:3000 \
              -e NODE_ENV="${{ secrets.NODE_ENV }}" \
              -e DB_URL="${{ secrets.DB_URL }}" \
              -e AMAZON_ACCESS_KEY_ID="${{ secrets.AMAZON_ACCESS_KEY_ID }}" \
              -e AMAZON_SECRET_ACCESS_KEY="${{ secrets.AMAZON_SECRET_ACCESS_KEY }}" \
              -e APP_MESSAGE_PREFIX="${{ secrets.APP_MESSAGE_PREFIX }}" \
              -e DB_SYNC="${{ secrets.DB_SYNC }}" \
              -e EMAIL_HOST="${{ secrets.EMAIL_HOST }}" \
              -e EMAIL_PASSWORD="${{ secrets.EMAIL_PASSWORD }}" \
              -e EMAIL_USERNAME="${{ secrets.EMAIL_USERNAME }}" \
              -e GOOGLE_CALLBACK_URL="${{ secrets.GOOGLE_CALLBACK_URL }}" \
              -e GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}" \
              -e GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}" \
              -e JWT_EXPIRES_IN="${{ secrets.JWT_EXPIRES_IN }}" \
              -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              -e MICRO_HOST="${{ secrets.MICRO_HOST }}" \
              -e MICRO_PORT="${{ secrets.MICRO_PORT }}" \
              -e AMAZON_BUCKET="${{ secrets.AMAZON_BUCKET }}" \
              -e URL_RESET_PASSWORD="${{ secrets.URL_RESET_PASSWORD }}" \
              ${{ secrets.DOCKERHUB_USERNAME }}/nestjs-api:${{ env.SHORT_SHA }}
